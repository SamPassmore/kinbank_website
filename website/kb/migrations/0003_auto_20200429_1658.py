# Generated by Django 3.0.5 on 2020-04-29 15:58

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kb', '0002_person'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('last_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('change_message', models.TextField()),
                ('action_flag', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('unnamed_0', models.IntegerField(blank=True, db_column='Unnamed: 0', primary_key=True, serialize=False)),
                ('category', models.TextField(blank=True, db_column='CATEGORY', null=True)),
                ('bibtexkey', models.TextField(blank=True, db_column='BIBTEXKEY', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('annote', models.IntegerField(blank=True, db_column='ANNOTE', null=True)),
                ('author', models.TextField(blank=True, db_column='AUTHOR', null=True)),
                ('booktitle', models.TextField(blank=True, db_column='BOOKTITLE', null=True)),
                ('chapter', models.IntegerField(blank=True, db_column='CHAPTER', null=True)),
                ('crossref', models.IntegerField(blank=True, db_column='CROSSREF', null=True)),
                ('edition', models.TextField(blank=True, db_column='EDITION', null=True)),
                ('editor', models.TextField(blank=True, db_column='EDITOR', null=True)),
                ('howpublished', models.TextField(blank=True, db_column='HOWPUBLISHED', null=True)),
                ('institution', models.IntegerField(blank=True, db_column='INSTITUTION', null=True)),
                ('journal', models.TextField(blank=True, db_column='JOURNAL', null=True)),
                ('key', models.IntegerField(blank=True, db_column='KEY', null=True)),
                ('month', models.TextField(blank=True, db_column='MONTH', null=True)),
                ('note', models.TextField(blank=True, db_column='NOTE', null=True)),
                ('number', models.TextField(blank=True, db_column='NUMBER', null=True)),
                ('organization', models.IntegerField(blank=True, db_column='ORGANIZATION', null=True)),
                ('pages', models.TextField(blank=True, db_column='PAGES', null=True)),
                ('publisher', models.TextField(blank=True, db_column='PUBLISHER', null=True)),
                ('school', models.TextField(blank=True, db_column='SCHOOL', null=True)),
                ('series', models.TextField(blank=True, db_column='SERIES', null=True)),
                ('title', models.TextField(blank=True, db_column='TITLE', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('volume', models.TextField(blank=True, db_column='VOLUME', null=True)),
                ('year', models.TextField(blank=True, db_column='YEAR', null=True)),
                ('keywords', models.TextField(blank=True, db_column='KEYWORDS', null=True)),
                ('url', models.TextField(blank=True, db_column='URL', null=True)),
                ('urldate', models.TextField(blank=True, db_column='URLDATE', null=True)),
                ('sourceid', models.TextField(blank=True, db_column='SOURCEID', null=True)),
                ('language', models.TextField(blank=True, db_column='LANGUAGE', null=True)),
                ('abstract', models.TextField(blank=True, db_column='ABSTRACT', null=True)),
                ('isbn', models.TextField(blank=True, db_column='ISBN', null=True)),
                ('issn', models.TextField(blank=True, db_column='ISSN', null=True)),
                ('shorttitle', models.TextField(blank=True, db_column='SHORTTITLE', null=True)),
                ('collaborator', models.TextField(blank=True, db_column='COLLABORATOR', null=True)),
                ('copyright', models.TextField(blank=True, db_column='COPYRIGHT', null=True)),
                ('doi', models.TextField(blank=True, db_column='DOI', null=True)),
                ('cfn', models.TextField(blank=True, db_column='CFN', null=True)),
                ('class_loc', models.TextField(blank=True, db_column='CLASS_LOC', null=True)),
                ('delivered', models.TextField(blank=True, db_column='DELIVERED', null=True)),
                ('document_type', models.TextField(blank=True, db_column='DOCUMENT_TYPE', null=True)),
                ('fn', models.TextField(blank=True, db_column='FN', null=True)),
                ('hhtype', models.TextField(blank=True, db_column='HHTYPE', null=True)),
                ('inlg', models.TextField(blank=True, db_column='INLG', null=True)),
                ('lgcode', models.TextField(blank=True, db_column='LGCODE', null=True)),
                ('macro_area', models.TextField(blank=True, db_column='MACRO_AREA', null=True)),
                ('mpi_eva_library_shelf', models.TextField(blank=True, db_column='MPI_EVA_LIBRARY_SHELF', null=True)),
                ('oclc', models.IntegerField(blank=True, db_column='OCLC', null=True)),
                ('src', models.TextField(blank=True, db_column='SRC', null=True)),
                ('subject_headings', models.TextField(blank=True, db_column='SUBJECT_HEADINGS', null=True)),
                ('location', models.TextField(blank=True, db_column='LOCATION', null=True)),
                ('glotto', models.TextField(blank=True, db_column='GLOTTO', null=True)),
                ('extra_hash', models.TextField(blank=True, db_column='EXTRA_HASH', null=True)),
                ('asjp_name', models.TextField(blank=True, db_column='ASJP_NAME', null=True)),
                ('aiatsis_callnumber', models.TextField(blank=True, db_column='AIATSIS_CALLNUMBER', null=True)),
                ('aiatsis_code', models.TextField(blank=True, db_column='AIATSIS_CODE', null=True)),
                ('aiatsis_reference_language', models.TextField(blank=True, db_column='AIATSIS_REFERENCE_LANGUAGE', null=True)),
                ('languageid', models.IntegerField(blank=True, db_column='LANGUAGEID', null=True)),
                ('mpifn', models.TextField(blank=True, db_column='MPIFN', null=True)),
                ('ozbib_id', models.IntegerField(blank=True, db_column='OZBIB_ID', null=True)),
                ('ozbibreftype', models.IntegerField(blank=True, db_column='OZBIBREFTYPE', null=True)),
                ('publication', models.TextField(blank=True, db_column='PUBLICATION', null=True)),
                ('country', models.TextField(blank=True, db_column='COUNTRY', null=True)),
                ('sil_id', models.IntegerField(blank=True, db_column='SIL_ID', null=True)),
                ('subject', models.TextField(blank=True, db_column='SUBJECT', null=True)),
                ('other_editions', models.TextField(blank=True, db_column='OTHER_EDITIONS', null=True)),
                ('fnnote', models.TextField(blank=True, db_column='FNNOTE', null=True)),
                ('variety', models.TextField(blank=True, db_column='VARIETY', null=True)),
                ('besttxt', models.TextField(blank=True, db_column='BESTTXT', null=True)),
                ('lccn', models.IntegerField(blank=True, db_column='LCCN', null=True)),
                ('filenames', models.TextField(blank=True, db_column='FILENAMES', null=True)),
                ('iso_code', models.TextField(blank=True, db_column='ISO_CODE', null=True)),
                ('olac_field', models.TextField(blank=True, db_column='OLAC_FIELD', null=True)),
                ('refdb_id', models.TextField(blank=True, db_column='REFDB_ID', null=True)),
                ('wals_code', models.TextField(blank=True, db_column='WALS_CODE', null=True)),
                ('author_statement', models.TextField(blank=True, db_column='AUTHOR_STATEMENT', null=True)),
                ('numberofpages', models.IntegerField(blank=True, db_column='NUMBEROFPAGES', null=True)),
                ('ozbibnote', models.TextField(blank=True, db_column='OZBIBNOTE', null=True)),
                ('langnote', models.TextField(blank=True, db_column='LANGNOTE', null=True)),
                ('lgfamily', models.TextField(blank=True, db_column='LGFAMILY', null=True)),
                ('zurichcode', models.TextField(blank=True, db_column='ZURICHCODE', null=True)),
                ('zurichnote', models.TextField(blank=True, db_column='ZURICHNOTE', null=True)),
                ('guldemann_location', models.TextField(blank=True, db_column='GULDEMANN_LOCATION', null=True)),
                ('thesistype', models.TextField(blank=True, db_column='THESISTYPE', null=True)),
                ('nosharefn', models.TextField(blank=True, db_column='NOSHAREFN', null=True)),
            ],
            options={
                'db_table': 'sources',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Person',
        ),
    ]
